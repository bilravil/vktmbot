const emoji = require('node-emoji');


function main(count){
	let value = count === 0 ? '' : count;
	let main = {
      	reply_markup : {
	        resize_keyboard: true,
	        one_time_keyboard: false,
	        keyboard: [
		        [`–î—Ä—É–∑—å—è${emoji.get('couple')}`],
		        [`–°–æ–æ–±—â–µ–Ω–∏—è${emoji.get('speech_balloon')} ${value}`],
		        [`–ù–∞—Å—Ç—Ä–æ–π–∫–∏üõ†Ô∏è`]]
      	}
	}
	return main;
}

function dialogs(arr){
  let main = {
        reply_markup : {
          resize_keyboard: true,
          one_time_keyboard: false,
          keyboard: arr
        }
  }
  return main;
}

function msg(user_id,msg_id){
	let message = {
        reply_markup: JSON.stringify({
            inline_keyboard: [
              [{ text: `–û—Ç–≤–µ—Ç–∏—Ç—å ${emoji.get('email')}`, callback_data: `/write${user_id}` }],
              [{ text: `–ü—Ä–æ—á–∏—Ç–∞–Ω–æ ${emoji.get('incoming_envelope')}`, callback_data: `/mark_as_read${msg_id}` }],
              [{ text: `–°–∫—Ä—ã—Ç—å ${emoji.get('no_entry_sign')}`, callback_data: `/close_not` }]
            ]
        })
    };
	return message;
}  	

function friend(user_id){
	let message = {
        reply_markup: JSON.stringify({
            inline_keyboard: [
              [{ text: `–ù–∞–ø–∏—Å–∞—Ç—å ${emoji.get('email')}`, callback_data: `/write${user_id}` }],
              [{ text: `–°–∫—Ä—ã—Ç—å ${emoji.get('no_entry_sign')}`, callback_data: `/close_not` }]
            ]
        })
    };
	return message;
} 

function next_dialog_page(){
  let message = {
        reply_markup: JSON.stringify({
            inline_keyboard: [
              [{ text: `–î–∞–ª–µ–µ ‚û°Ô∏è`, callback_data: `/next_dialog_page` }]              
            ]
        })
    };
  return message;
} 

function next_chat_page(title){
  let message = {
        reply_markup: JSON.stringify({
            inline_keyboard: [
              [{ text: `–î–∞–ª–µ–µ ‚û°Ô∏è`, callback_data: `/next_chat_page` }],
              [{ text: `–ó–∞–∫—Ä—ã—Ç—å ‚úñÔ∏è`, callback_data: `/close_chat${title}` }]              
            ]
        })
    };
  return message;
} 

module.exports.main = main;
module.exports.dialogs = dialogs;
module.exports.msg = msg;
module.exports.friend = friend;
module.exports.next_dialog_page = next_dialog_page;
module.exports.next_chat_page = next_chat_page;